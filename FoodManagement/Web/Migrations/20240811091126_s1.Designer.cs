// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Models.EF;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(FoodContext))]
    [Migration("20240811091126_s1")]
    partial class s1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.4.24267.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Database.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Intro")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("KeyWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Picture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Aticle");
                });

            modelBuilder.Entity("Core.Database.Models.Authorized", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.ToTable("Authorized");

                    b.HasData(
                        new
                        {
                            Id = new Guid("baf6a4af-201b-46a4-a7c4-e0243e301e90"),
                            GroupId = new Guid("fec47abf-51ad-42b9-8538-286bb0ec93f1"),
                            RoleId = new Guid("1ef67211-920b-48b6-a9df-512c6ec85ef1")
                        },
                        new
                        {
                            Id = new Guid("bf6e2b5a-2328-42f4-91f1-1c3c47c2e2dc"),
                            GroupId = new Guid("fec47abf-51ad-42b9-8538-286bb0ec93f1"),
                            RoleId = new Guid("69ad0aba-087c-48b0-a7ed-83d7cc9342fb")
                        },
                        new
                        {
                            Id = new Guid("2059e034-33c5-47ab-b91f-91f2b0320596"),
                            GroupId = new Guid("fec47abf-51ad-42b9-8538-286bb0ec93f1"),
                            RoleId = new Guid("614baaa4-3b04-4864-a971-ea62da5e24b0")
                        },
                        new
                        {
                            Id = new Guid("6538e27f-0a61-4d7a-8df2-37b18f736a76"),
                            GroupId = new Guid("fec47abf-51ad-42b9-8538-286bb0ec93f1"),
                            RoleId = new Guid("42d9af50-88e4-46df-9392-e1ea60884c2e")
                        });
                });

            modelBuilder.Entity("Core.Database.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = new Guid("357ab6ba-b001-4faa-a151-bb3da1489453"),
                            CreatedBy = new Guid("e23e4a7c-72fa-499d-8495-a4ea54377aa8"),
                            CreatedOn = new DateTime(2024, 8, 11, 16, 11, 25, 377, DateTimeKind.Local).AddTicks(904),
                            Name = "Root"
                        },
                        new
                        {
                            Id = new Guid("def472c2-1590-4b8d-afff-b84e42b0bbe2"),
                            CreatedBy = new Guid("e23e4a7c-72fa-499d-8495-a4ea54377aa8"),
                            CreatedOn = new DateTime(2024, 8, 11, 16, 11, 25, 377, DateTimeKind.Local).AddTicks(906),
                            Name = "Authorized",
                            ParentId = new Guid("357ab6ba-b001-4faa-a151-bb3da1489453")
                        },
                        new
                        {
                            Id = new Guid("72f3845c-ae64-4093-87ec-072b66a943d1"),
                            CreatedBy = new Guid("e23e4a7c-72fa-499d-8495-a4ea54377aa8"),
                            CreatedOn = new DateTime(2024, 8, 11, 16, 11, 25, 377, DateTimeKind.Local).AddTicks(911),
                            Name = "Nhom Quyen",
                            ParentId = new Guid("def472c2-1590-4b8d-afff-b84e42b0bbe2")
                        },
                        new
                        {
                            Id = new Guid("51007f20-0d48-493f-b163-d6f37d3bd562"),
                            CreatedBy = new Guid("e23e4a7c-72fa-499d-8495-a4ea54377aa8"),
                            CreatedOn = new DateTime(2024, 8, 11, 16, 11, 25, 377, DateTimeKind.Local).AddTicks(915),
                            Name = "Article",
                            ParentId = new Guid("357ab6ba-b001-4faa-a151-bb3da1489453")
                        },
                        new
                        {
                            Id = new Guid("b7fdfff4-bca6-411b-9b3e-1f1498c64f7b"),
                            CreatedBy = new Guid("e23e4a7c-72fa-499d-8495-a4ea54377aa8"),
                            CreatedOn = new DateTime(2024, 8, 11, 16, 11, 25, 377, DateTimeKind.Local).AddTicks(950),
                            Name = "Product",
                            ParentId = new Guid("357ab6ba-b001-4faa-a151-bb3da1489453")
                        });
                });

            modelBuilder.Entity("Core.Database.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Group");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fec47abf-51ad-42b9-8538-286bb0ec93f1"),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("Core.Database.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Picture")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e23e4a7c-72fa-499d-8495-a4ea54377aa8"),
                            CreatedOn = new DateTime(2024, 8, 11, 16, 11, 25, 377, DateTimeKind.Local).AddTicks(858),
                            Email = "ngoc.phuc@dla.edu.vn",
                            GroupId = new Guid("fec47abf-51ad-42b9-8538-286bb0ec93f1"),
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LoginName = "ngoc.phuc",
                            Name = "Nguyen Ngoc Phuc",
                            Password = "c4ca4238a0b923820dcc509a6f75849b",
                            Picture = "/img/users/avatar (1).png"
                        });
                });

            modelBuilder.Entity("Core.Database.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Intro")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Picture")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Core.Database.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ef67211-920b-48b6-a9df-512c6ec85ef1"),
                            CategoryId = new Guid("72f3845c-ae64-4093-87ec-072b66a943d1"),
                            Code = "view-groups",
                            Name = "Xem danh sach Nhom"
                        },
                        new
                        {
                            Id = new Guid("69ad0aba-087c-48b0-a7ed-83d7cc9342fb"),
                            CategoryId = new Guid("72f3845c-ae64-4093-87ec-072b66a943d1"),
                            Code = "edit-group",
                            Name = "Cap Nhat Nhom"
                        },
                        new
                        {
                            Id = new Guid("614baaa4-3b04-4864-a971-ea62da5e24b0"),
                            CategoryId = new Guid("72f3845c-ae64-4093-87ec-072b66a943d1"),
                            Code = "save-group",
                            Name = "Luu Nhom"
                        },
                        new
                        {
                            Id = new Guid("42d9af50-88e4-46df-9392-e1ea60884c2e"),
                            CategoryId = new Guid("72f3845c-ae64-4093-87ec-072b66a943d1"),
                            Code = "delete-group",
                            Name = "Xoa Nhom"
                        });
                });

            modelBuilder.Entity("Core.Database.Models.Authorized", b =>
                {
                    b.HasOne("Core.Database.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("Core.Database.Models.Role", "Role")
                        .WithMany("Authorizeds")
                        .HasForeignKey("RoleId");

                    b.Navigation("Group");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Core.Database.Models.Category", b =>
                {
                    b.HasOne("Core.Database.Models.Category", "Parent")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Core.Database.Models.Member", b =>
                {
                    b.HasOne("Core.Database.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Core.Database.Models.Product", b =>
                {
                    b.HasOne("Core.Database.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.Database.Models.Role", b =>
                {
                    b.HasOne("Core.Database.Models.Category", "Category")
                        .WithMany("Roles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.Database.Models.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Core.Database.Models.Role", b =>
                {
                    b.Navigation("Authorizeds");
                });
#pragma warning restore 612, 618
        }
    }
}
